{"remainingRequest":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js!/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/src/components/BaseSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/src/components/BaseSlider.vue","mtime":1607335909000},{"path":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/babel.config.js","mtime":1607335909000},{"path":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/viettran/Desktop/bootstrap-vue-argon-dashboard-master/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\nimport noUiSlider from 'nouislider';\nexport default {\n  name: 'base-slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description: '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: function _default() {\n        return [true, false];\n      },\n      description: '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: function _default() {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description: '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      },\n      description: '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data: function data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider: function createSlider() {\n      var _this = this;\n\n      noUiSlider.create(this.$el, _objectSpread({\n        start: this.value || this.start,\n        connect: Array.isArray(this.value) ? true : this.connect,\n        range: this.range\n      }, this.options));\n      var slider = this.$el.noUiSlider;\n      slider.on('slide', function () {\n        var value = slider.get();\n\n        if (value !== _this.value) {\n          _this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      var slider = this.$el.noUiSlider;\n      var sliderValue = slider.get();\n\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (oldValue.length === newValue.length && oldValue.every(function (v, i) {\n            return v === newValue[i];\n          })) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;AAIA;AAEA;AACAA,qBADA;AAEAC;AACAC;AACAC,mCADA;AAEAC;AAFA,KADA;AAKAC;AACAF,mBADA;AAEAG,oBAFA;AAGAF;AAHA,KALA;AAUAG;AACAJ,2BADA;AAEAG,gBAFA;AAGAF,mBACA;AAJA,KAVA;AAgBAI;AACAL,4BADA;AAEAG;AAAA;AAAA,OAFA;AAGAF,mBACA;AAJA,KAhBA;AAsBAK;AACAN,kBADA;AAEAG;AACA;AACAI,gBADA;AAEAC;AAFA;AAIA,OAPA;AAQAP,mBACA;AATA,KAtBA;AAiCAQ;AACAT,kBADA;AAEAG;AACA;AACA,OAJA;AAKAF,mBACA;AANA;AAjCA,GAFA;AA4CAS,MA5CA,kBA4CA;AACA;AACAC;AADA;AAGA,GAhDA;AAiDAC;AACAC,gBADA,0BACA;AAAA;;AACAC;AACAV,uCADA;AAEAC,gEAFA;AAGAC;AAHA,SAIA,YAJA;AAMA;AACAK;AACA;;AACA;AACA;AACA;AACA,OALA;AAMA;AAfA,GAjDA;AAkEAI,SAlEA,qBAkEA;AACA;AACA,GApEA;AAqEAC;AACAjB,SADA,iBACAkB,QADA,EACAC,QADA,EACA;AACA;AACA;;AACA;AACA;AACA,cACAA,uCACAA;AAAA;AAAA,YAFA,EAGA;AACAP;AACA;AACA,SAPA,MAOA;AACAA;AACA;AACA;AACA;AAhBA;AArEA","names":["name","props","value","type","description","disabled","default","start","connect","range","min","max","options","data","slider","methods","createSlider","noUiSlider","mounted","watch","newValue","oldValue"],"sourceRoot":"src/components","sources":["BaseSlider.vue"],"sourcesContent":["<template>\n  <div class=\"slider\" :disabled=\"disabled\"></div>\n</template>\n<script>\nimport noUiSlider from 'nouislider';\n\nexport default {\n  name: 'base-slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description:\n        '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: () => [true, false],\n      description:\n        '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: () => {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description:\n        '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n      description:\n        '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider() {\n      noUiSlider.create(this.$el, {\n        start: this.value || this.start,\n        connect: Array.isArray(this.value) ? true : this.connect,\n        range: this.range,\n        ...this.options\n      });\n      const slider = this.$el.noUiSlider;\n      slider.on('slide', () => {\n        let value = slider.get();\n        if (value !== this.value) {\n          this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value(newValue, oldValue) {\n      const slider = this.$el.noUiSlider;\n      const sliderValue = slider.get();\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (\n            oldValue.length === newValue.length &&\n            oldValue.every((v, i) => v === newValue[i])\n          ) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};\n</script>\n<style></style>\n"]}]}